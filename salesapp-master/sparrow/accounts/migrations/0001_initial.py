# Generated by Django 2.2.6 on 2020-03-25 12:17

import accounts.models
from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=200)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('is_company', models.BooleanField(default=False)),
                ('website', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('mobile', models.CharField(blank=True, max_length=20)),
                ('fax', models.CharField(blank=True, max_length=20)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('company_img', models.TextField(default='')),
                ('timezone_offset', models.IntegerField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=150, null=True)),
                ('daylight_offset', models.IntegerField(blank=True, default=0, help_text='Offset in minutes', null=True)),
                ('daylight_start', models.CharField(blank=True, default='', help_text='Date format in DD-MM', max_length=15, null=True, verbose_name='Daylight start date')),
                ('daylight_end', models.CharField(blank=True, default='', help_text='Date format in DD-MM', max_length=15, null=True, verbose_name='Daylight end date')),
            ],
        ),
        migrations.CreateModel(
            name='ContentPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_group', models.CharField(max_length=150)),
                ('content_name', models.CharField(max_length=150)),
                ('sequence', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='MainMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Menu name')),
                ('url', models.CharField(blank=True, max_length=1000, verbose_name='Url')),
                ('icon', models.CharField(blank=True, max_length=500, verbose_name='Icon')),
                ('sequence', models.IntegerField(default=0, verbose_name='Sequence')),
                ('is_active', models.BooleanField(default=True)),
                ('is_external', models.NullBooleanField(help_text='Check if used for customer account')),
                ('is_master', models.BooleanField(default=False)),
                ('on_click', models.CharField(blank=True, max_length=500, verbose_name='On click')),
                ('company_code', models.IntegerField(blank=True, help_text='Specifiy company code if this menu is specific to company', null=True, verbose_name='Company Code')),
                ('menu_code', models.CharField(blank=True, max_length=200, null=True, verbose_name='Menu Code')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('parent_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.MainMenu')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_id', models.IntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=0)),
                ('avatar', models.TextField(default='')),
                ('notification_email', models.EmailField(max_length=254, null=True)),
                ('notification_mob', models.CharField(blank=True, max_length=15, null=True)),
                ('color_scheme', models.CharField(blank=True, max_length=300, null=True, verbose_name='Color Scheme')),
                ('image_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Background image')),
                ('user_type', models.IntegerField(choices=[('1', 'Internal'), ('2', 'Customer')], null=True, verbose_name='User type')),
                ('ip_restriction', models.NullBooleanField(verbose_name='IP Restriction')),
                ('purchase_plan_settings', models.TextField(default='', max_length=1000)),
                ('display_row', models.IntegerField(blank=True, null=True, verbose_name='Display row')),
                ('default_page', models.TextField(blank=True, max_length=250, null=True, verbose_name='Default page loaded after login')),
                ('timezone_offset', models.IntegerField(blank=True, null=True)),
                ('menu_launcher', models.BooleanField(default=False)),
                ('profile_image', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(), upload_to=accounts.models.get_profile_image_name)),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='auth.Group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resetuid', models.CharField(default=accounts.models.get_uid, max_length=50)),
                ('is_used', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PagePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('act_name', models.CharField(max_length=30)),
                ('act_code', models.CharField(max_length=200)),
                ('content', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.ContentPermission')),
                ('menu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.MainMenu')),
            ],
        ),
        migrations.CreateModel(
            name='GroupPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='auth.Group')),
                ('page_permission', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.PagePermission')),
            ],
        ),
    ]
